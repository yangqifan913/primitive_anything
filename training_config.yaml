# 3D物体检测统一配置文件
# 包含所有训练、模型、数据、损失参数，避免重复
version: '2.0'

# =============================================================================
# 全局设置 - 所有其他部分共享的基础参数
# =============================================================================
global:
  max_seq_len: 12        # 最大序列长度（同时用于模型和数据）
  pad_id: -1.0           # 填充值（所有模块统一）
  image_size: [640, 640] # 图像尺寸（输入和数据处理）
  device: "cuda"         # 训练设备
  seed: 42               # 随机种子
  
  # 训练运行参数
  logging:
    log_interval: -1           # -1表示每个epoch只打印一次汇总日志
    save_interval: 10          # 检查点保存间隔
    validation_samples: [0, 1, 2, 3, 4]  # 验证样本ID
  
  # 可视化参数
  visualization:
    distance_threshold: 10.0   # 可视化距离阈值
    coordinate_threshold: 50   # 坐标过滤阈值
    box_color: [0, 255, 0]    # 框颜色 (RGB)

# =============================================================================
# 训练配置 - 训练流程和策略
# =============================================================================
training:
  # 训练阶段配置
  phases:
    teacher_forcing:
      epochs: 120
      teacher_forcing_ratio: 1.0
      scheduled_sampling: false
      sampling_strategy: "none"
      description: "完全Teacher Forcing阶段"
    
    scheduled_sampling:
      epochs: 120 
      teacher_forcing_ratio: 1.0  # 从1.0衰减到0
      scheduled_sampling: true
      sampling_strategy: "inverse_sigmoid"
      description: "Scheduled Sampling过渡阶段"
    
    pure_generation:
      epochs: 260
      teacher_forcing_ratio: 0.0
      scheduled_sampling: false
      sampling_strategy: "none"
      description: "纯生成阶段"
  
  # 优化器配置
  optimizer:
    type: "AdamW"
    lr: 0.0001
    betas: [0.9, 0.999]
    eps: 0.00000001
    weight_decay: 0.05
  
  # 学习率调度
  scheduler:
    type: "CosineAnnealingLR"
    T_max: 400  # 总epoch数
    eta_min: 0.000001
  
  # 训练优化
  optimizations:
    early_stopping:
      enabled: true
      patience: 10
      min_delta: 0.001
      eos_threshold: 0.5
      adaptive_sequence_length: true
    gradient_clipping:
      enabled: true
      max_norm: 1.0
    mixed_precision:
      enabled: true
      loss_scale: "dynamic"
    torch_compile:
      enabled: false
      mode: "default"
    cudnn_optimizations:
      benchmark: true
      deterministic: false
    incremental_inference:
      enabled: true        # 启用增量推理（推荐）
      temperature: 0.5     # Gumbel Softmax温度（训练时梯度传播，降低以节省显存）
      memory_efficient: true  # 启用内存优化模式
    best_model_testing:
      enabled: true        # 在获得最佳模型时在test集上进行推理
      save_results: true   # 保存test结果到SwanLab

# =============================================================================
# 模型配置 - 网络架构
# =============================================================================
model:
  name: "PrimitiveTransformer3DComplex"
  version: "1.0"
  
  # 输入配置
  input:
    channels: 6  # RGBXYZ
  
  # 图像编码器
  image_encoder:
    backbone: "resnet50"
    pretrained: true
    use_fpn: true
    fpn_output_channels: 128
    output_dim: 256
    
    # FPN详细配置
    fpn:
      attention_layers: [2, 3]  # 在layer3和layer4使用注意力 (i >= 2)
      attention_heads: 8        # 注意力头数
      smooth_conv_kernel: 3     # 平滑卷积核大小
      smooth_conv_padding: 1    # 平滑卷积填充
    
    # ResNet Conv1配置
    conv1:
      out_channels: 64
      kernel_size: 7
      stride: 2
      padding: 3
      bias: false
  
  # Transformer架构
  transformer:
    dim: 512
    depth: 6
    heads: 8
    dim_head: 64
    attn_dropout: 0.1
    ff_dropout: 0.1
      #use_rotary_emb: true
      #rotary_emb_dim: 32
  
  # 离散化配置
  discretization:
    num_discrete_x: 128
    num_discrete_y: 128
    num_discrete_z: 128
    num_discrete_w: 64
    num_discrete_h: 64
    num_discrete_l: 64
  
  # 嵌入维度
  embeddings:
    dim_x_embed: 64
    dim_y_embed: 64
    dim_z_embed: 64
    dim_w_embed: 64
    dim_h_embed: 64
    dim_l_embed: 64
  
  # 条件化配置
  conditioning:
    condition_on_image: true
    image_film_cond: true
      #use_self_cond: false
      #self_cond_prob: 0.5
  
  # 高级配置
  advanced:
    use_gateloop: true
    gateloop_use_heinsen: false
    
    # GateLoop详细配置
    gateloop:
      depth: 2                  # GateLoop层数
    
    # 位置编码配置
    positional_encoding:
      # 2D位置编码 (用于图像特征)
      pos_2d:
        base: 10000             # 正弦编码底数
        dim_divisor: 4          # 维度除数 (dim // 4)
      
      # 1D位置编码 (用于序列) 
      pos_1d:
        max_seq_len: 1000       # 最大序列长度
        learnable: false        # 是否可学习

# =============================================================================
# 数据配置 - 数据加载和增强
# =============================================================================
data:
  # 数据集设置
  dataset:
    data_root: "sim_data"
    
  # 3D坐标和尺寸范围 (原始物理数值，不做归一化)
  continuous_ranges:
    x: [0.5, 2.5]
    y: [-2.0, 2.0] 
    z: [-1.5, 1.5]
    w: [0.3, 0.7]
    h: [0.3, 0.7]
    l: [0.3, 0.7]
  
  # DataLoader设置
  dataloader:
    batch_size: 4  # 🔧 减少batch size解决CUDA OOM问题（从16->4）
    num_workers: 4
    pin_memory: true
    prefetch_factor: 2
    persistent_workers: true
    shuffle: true
    drop_last: true
  
  # 数据增强
  augmentation:
    enabled: true
    intensity: 1.0
    
    # RGB图像增强
    rgb_enhancement:
      brightness:
        enabled: true
        probability: 0.7
        factor_range: [0.8, 1.2]  # 亮度调整范围
      contrast:
        enabled: true
        probability: 0.7
        factor_range: [0.8, 1.2]  # 对比度调整范围
      saturation:
        enabled: true
        probability: 0.5
        factor_range: [0.8, 1.2]  # 饱和度调整范围
      hue:
        enabled: true
        probability: 0.3
        shift_range: [-10, 10]    # 色调偏移范围
    
    # RGB噪声
    rgb_noise:
      gaussian:
        enabled: true
        probability: 0.6
        std_range: [2, 8]        # 高斯噪声标准差范围
      salt_pepper:
        enabled: true
        probability: 0.4
        ratio_range: [0.001, 0.01]  # 椒盐噪声比例范围
      speckle:
        enabled: true
        probability: 0.3
        std_range: [0.05, 0.15]  # 斑点噪声标准差范围
    
    # 点云增强
    point_cloud:
      enabled: true
      gaussian_noise:
        enabled: true
        probability: 0.7
        std_ranges:
          x: [0.001, 0.005]        # X坐标噪声标准差范围
          y: [0.001, 0.005]        # Y坐标噪声标准差范围
          z: [0.001, 0.005]       # Z坐标噪声标准差范围
      dropout:
        enabled: true
        probability: 0.5
        ratio_range: [0.0001, 0.001]  # 点云丢弃比例范围
      quantization:
        enabled: false
        probability: 0.4
        step_range: [0.005, 0.02]   # 量化步长范围
      coordinate_bias:
        enabled: false
        probability: 0.3
        bias_ranges:
          x: [-0.02, 0.02]       # X坐标偏置范围
          y: [-0.02, 0.02]       # Y坐标偏置范围
          z: [-0.01, 0.01]       # Z坐标偏置范围
    
    # 3D box增强
    box_augmentation:
      enabled: false
      probability: 0.2            # 总体Box增强概率
      position_noise:
        enabled: false
        probability: 0.8
        noise_ranges:
          x: [-0.02, 0.02]       # X位置噪声范围
          y: [-0.02, 0.02]       # Y位置噪声范围 
          z: [-0.01, 0.01]       # Z位置噪声范围
      size_noise:
        enabled: false
        probability: 0.6
        noise_ranges:
          w: [-0.01, 0.01]       # 宽度噪声范围
          h: [-0.01, 0.01]       # 高度噪声范围
          l: [-0.01, 0.01]       # 长度噪声范围
    
    # 全局平移增强（点云和box一起平移）
    global_translation:
      enabled: true
      probability: 0.5            # 全局平移概率
      translation_ranges:
        x: [-0.1, 0.1]           # X方向平移范围
        y: [-0.1, 0.1]           # Y方向平移范围
        z: [-0.05, 0.05]         # Z方向平移范围（通常较小）

# =============================================================================
# 损失函数配置
# =============================================================================
loss:
  name: "AdaptivePrimitiveTransformer3DLoss"
  version: "1.0"
  
  # 数据处理
  data_processing:
    ignore_index: -100
    label_smoothing: 0.1        # 标签平滑参数
    pad_id: -1.0               # 填充ID
  
  # 算法参数
  algorithm:
    # IoU计算参数
    iou:
      epsilon: 0.0000001        # 数值稳定性参数
      temperature: 10.0         # sigmoid陡峭程度
      sampling_resolution: 20   # 采样分辨率
    
    # 距离感知分类
    distance_aware:
      enabled: true
      alpha: 2.0               # 距离权重参数
    
    # Focal Loss
    focal:
      enabled: false
      gamma: 2.0               # focal loss gamma参数
  
  # 基础权重
  base_weights:
    classification: 1.0
    delta: 2.0
    eos: 2.0
    iou: 1.0
  
  # 自适应权重
  adaptive_weights:
    adaptive_classification: true
    adaptive_delta: true
    interpolation: "linear"
    
    thresholds:
      low: 0.3
      high: 0.7
    
    # 分类权重范围
    classification_range:
      min: 0.5
      max: 2.0
    
    # Delta权重范围  
    delta_range:
      min: 0.5
      max: 2.0
  
  # IoU计算配置
  # iou_computation:
  #   projection_axes: 3
  #   projection_method: "multi_axis"
  #   enable_rotation: true
  #   min_area_threshold: 1e-6
    
  #   # 2D投影IoU设置
  #   grid_resolution: 100
  #   polygon_method: "shoelace"

# =============================================================================
# 实验配置 - 日志和保存
# =============================================================================
experiment:
  name: "primitive_3d_unified"
  description: "统一配置的3D物体检测实验"
  
  # 检查点配置
  checkpoints:
    save_dir: "experiments"
    save_latest: true
    save_best_val: true
    save_best_generation: true
    save_interval: null  # 不按epoch间隔保存
  
  # 验证配置
  validation:
    interval: 1  # 每epoch验证
    samples: [0, 1, 2, 3, 4]  # 验证样本索引
    
  # 日志配置
  logging:
    use_swanlab: true
    log_interval: 10  # 每10个batch记录一次
    save_model_graph: false
    log_gradients: false
    log_weights: false 
